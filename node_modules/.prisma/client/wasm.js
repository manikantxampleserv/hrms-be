
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.5.0
 * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
 */
Prisma.prismaVersion = {
  client: "6.5.0",
  engine: "173f8d54f8d52e692c7e27e72a88314ec7aeff60"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable',
  Snapshot: 'Snapshot'
});

exports.Prisma.Hrms_d_role_permissionsScalarFieldEnum = {
  id: 'id',
  role_id: 'role_id',
  permissions: 'permissions',
  is_active: 'is_active',
  log_inst: 'log_inst',
  createdate: 'createdate',
  updatedate: 'updatedate',
  createdby: 'createdby',
  updatedby: 'updatedby'
};

exports.Prisma.Hrms_d_user_roleScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  role_id: 'role_id',
  is_active: 'is_active',
  log_inst: 'log_inst',
  createdate: 'createdate',
  updatedate: 'updatedate',
  createdby: 'createdby',
  updatedby: 'updatedby'
};

exports.Prisma.Hrms_m_roleScalarFieldEnum = {
  id: 'id',
  role_name: 'role_name',
  is_active: 'is_active',
  log_inst: 'log_inst',
  createdate: 'createdate',
  updatedate: 'updatedate',
  createdby: 'createdby',
  updatedby: 'updatedby'
};

exports.Prisma.Hrms_m_userScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  email: 'email',
  full_name: 'full_name',
  is_active: 'is_active',
  log_inst: 'log_inst',
  createdate: 'createdate',
  updatedate: 'updatedate',
  createdby: 'createdby',
  updatedby: 'updatedby',
  address: 'address',
  phone: 'phone',
  profile_img: 'profile_img'
};

exports.Prisma.Hrms_m_moduleScalarFieldEnum = {
  id: 'id',
  module_name: 'module_name',
  description: 'description',
  is_active: 'is_active',
  log_inst: 'log_inst',
  createdate: 'createdate',
  updatedate: 'updatedate',
  createdby: 'createdby',
  updatedby: 'updatedby'
};

exports.Prisma.Hrms_d_appointment_letterScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  issue_date: 'issue_date',
  designation: 'designation',
  terms_summary: 'terms_summary',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_appraisalScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  review_period: 'review_period',
  rating: 'rating',
  reviewer_comments: 'reviewer_comments',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_asset_assignmentScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  asset_type_id: 'asset_type_id',
  asset_name: 'asset_name',
  serial_number: 'serial_number',
  issued_on: 'issued_on',
  returned_on: 'returned_on',
  status: 'status',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_competencyScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  skill_name: 'skill_name',
  proficiency_level: 'proficiency_level',
  last_assessed_date: 'last_assessed_date',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_disciplinary_actionScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  incident_date: 'incident_date',
  incident_description: 'incident_description',
  action_taken: 'action_taken',
  committee_notes: 'committee_notes',
  penalty_type: 'penalty_type',
  effective_from: 'effective_from',
  status: 'status',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_document_uploadScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  document_type: 'document_type',
  document_path: 'document_path',
  uploaded_on: 'uploaded_on',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst',
  document_number: 'document_number',
  issued_date: 'issued_date',
  expiry_date: 'expiry_date',
  is_mandatory: 'is_mandatory',
  document_owner_type: 'document_owner_type',
  document_owner_id: 'document_owner_id'
};

exports.Prisma.Hrms_d_employeeScalarFieldEnum = {
  id: 'id',
  employee_code: 'employee_code',
  first_name: 'first_name',
  last_name: 'last_name',
  gender: 'gender',
  date_of_birth: 'date_of_birth',
  national_id_number: 'national_id_number',
  passport_number: 'passport_number',
  employment_type: 'employment_type',
  employee_category: 'employee_category',
  designation_id: 'designation_id',
  department_id: 'department_id',
  join_date: 'join_date',
  confirm_date: 'confirm_date',
  resign_date: 'resign_date',
  bank_id: 'bank_id',
  account_number: 'account_number',
  work_location: 'work_location',
  email: 'email',
  phone_number: 'phone_number',
  status: 'status',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_employee_addressScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  address_type: 'address_type',
  street: 'street',
  street_no: 'street_no',
  building: 'building',
  floor: 'floor',
  city: 'city',
  district: 'district',
  state: 'state',
  country: 'country',
  zip_code: 'zip_code'
};

exports.Prisma.Hrms_d_employee_suggestionScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  suggestion_text: 'suggestion_text',
  votes: 'votes',
  submitted_on: 'submitted_on',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_employment_contractScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  contract_start_date: 'contract_start_date',
  contract_end_date: 'contract_end_date',
  contract_type: 'contract_type',
  document_path: 'document_path',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_exit_clearanceScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  clearance_date: 'clearance_date',
  cleared_by: 'cleared_by',
  remarks: 'remarks',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_exit_interviewScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  interview_date: 'interview_date',
  reason_for_leaving: 'reason_for_leaving',
  feedback: 'feedback',
  suggestions: 'suggestions',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_grievanceScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  grievance_type: 'grievance_type',
  description: 'description',
  anonymous: 'anonymous',
  submitted_on: 'submitted_on',
  status: 'status',
  assigned_to: 'assigned_to',
  resolution_notes: 'resolution_notes',
  resolved_on: 'resolved_on',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_helpdesk_ticketScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  ticket_subject: 'ticket_subject',
  ticket_type: 'ticket_type',
  status: 'status',
  priority: 'priority',
  assigned_to: 'assigned_to',
  description: 'description',
  submitted_on: 'submitted_on',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_hr_letterScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  letter_type: 'letter_type',
  request_date: 'request_date',
  issue_date: 'issue_date',
  document_path: 'document_path',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_job_postingScalarFieldEnum = {
  id: 'id',
  department_id: 'department_id',
  designation_id: 'designation_id',
  job_title: 'job_title',
  description: 'description',
  required_experience: 'required_experience',
  posting_date: 'posting_date',
  closing_date: 'closing_date',
  is_internal: 'is_internal',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_leave_applicationScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  leave_type_id: 'leave_type_id',
  start_date: 'start_date',
  end_date: 'end_date',
  reason: 'reason',
  status: 'status',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_leave_encashmentScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  leave_type_id: 'leave_type_id',
  leave_days: 'leave_days',
  encashment_amount: 'encashment_amount',
  approval_status: 'approval_status',
  encashment_date: 'encashment_date',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_loan_requestScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  loan_type_id: 'loan_type_id',
  amount: 'amount',
  emi_months: 'emi_months',
  status: 'status',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_medical_recordScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  record_type: 'record_type',
  description: 'description',
  record_date: 'record_date',
  document_path: 'document_path',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_notification_logScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  message_title: 'message_title',
  message_body: 'message_body',
  channel: 'channel',
  sent_on: 'sent_on',
  status: 'status',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_offer_letterScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  offer_date: 'offer_date',
  position: 'position',
  offered_salary: 'offered_salary',
  valid_until: 'valid_until',
  status: 'status',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_org_chartScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  manager_id: 'manager_id',
  position_title: 'position_title',
  level: 'level',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_payslipScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  month: 'month',
  net_salary: 'net_salary',
  pdf_path: 'pdf_path',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_probation_reviewScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  probation_end_date: 'probation_end_date',
  review_notes: 'review_notes',
  confirmation_status: 'confirmation_status',
  confirmation_date: 'confirmation_date',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_recognition_awardScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  award_title: 'award_title',
  description: 'description',
  award_date: 'award_date',
  nominated_by: 'nominated_by',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_relieving_letterScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  relieving_date: 'relieving_date',
  remarks: 'remarks',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_remote_work_logScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  work_date: 'work_date',
  hours_worked: 'hours_worked',
  task_summary: 'task_summary',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_resumeScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  resume_path: 'resume_path',
  uploaded_on: 'uploaded_on',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_succession_planScalarFieldEnum = {
  id: 'id',
  critical_position: 'critical_position',
  current_holder_id: 'current_holder_id',
  potential_successor_id: 'potential_successor_id',
  readiness_level: 'readiness_level',
  plan_date: 'plan_date',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_survey_responseScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  survey_id: 'survey_id',
  response_text: 'response_text',
  submitted_on: 'submitted_on',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_time_sheetScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  work_date: 'work_date',
  project_name: 'project_name',
  task_description: 'task_description',
  hours_worked: 'hours_worked',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_training_feedbackScalarFieldEnum = {
  id: 'id',
  training_id: 'training_id',
  employee_id: 'employee_id',
  feedback_text: 'feedback_text',
  rating: 'rating',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_training_sessionScalarFieldEnum = {
  id: 'id',
  training_title: 'training_title',
  trainer_name: 'trainer_name',
  training_date: 'training_date',
  location: 'location',
  training_type: 'training_type',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_travel_expenseScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  travel_purpose: 'travel_purpose',
  start_date: 'start_date',
  end_date: 'end_date',
  destination: 'destination',
  total_amount: 'total_amount',
  approved_by: 'approved_by',
  approval_status: 'approval_status',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_work_life_eventScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  event_type: 'event_type',
  event_date: 'event_date',
  notes: 'notes',
  requires_followup: 'requires_followup',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_work_permitScalarFieldEnum = {
  id: 'id',
  employee_id: 'employee_id',
  permit_number: 'permit_number',
  valid_from: 'valid_from',
  valid_to: 'valid_to',
  country: 'country',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_d_wps_file_logScalarFieldEnum = {
  id: 'id',
  payroll_month: 'payroll_month',
  file_path: 'file_path',
  generated_on: 'generated_on',
  submitted_to_bank: 'submitted_to_bank',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_advance_typeScalarFieldEnum = {
  id: 'id',
  advance_name: 'advance_name',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_asset_typeScalarFieldEnum = {
  id: 'id',
  asset_type_name: 'asset_type_name',
  depreciation_rate: 'depreciation_rate',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_award_typeScalarFieldEnum = {
  id: 'id',
  award_name: 'award_name',
  description: 'description',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_bank_masterScalarFieldEnum = {
  id: 'id',
  bank_name: 'bank_name',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst',
  is_active: 'is_active'
};

exports.Prisma.Hrms_m_branch_masterScalarFieldEnum = {
  id: 'id',
  company_id: 'company_id',
  branch_name: 'branch_name',
  location: 'location',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst',
  is_active: 'is_active'
};

exports.Prisma.Hrms_m_company_masterScalarFieldEnum = {
  id: 'id',
  company_name: 'company_name',
  company_code: 'company_code',
  address: 'address',
  contact_person: 'contact_person',
  contact_email: 'contact_email',
  contact_phone: 'contact_phone',
  country_id: 'country_id',
  currency_code: 'currency_code',
  financial_year_start: 'financial_year_start',
  timezone: 'timezone',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst',
  is_active: 'is_active'
};

exports.Prisma.Hrms_m_currency_masterScalarFieldEnum = {
  id: 'id',
  currency_code: 'currency_code',
  currency_name: 'currency_name',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst',
  is_active: 'is_active'
};

exports.Prisma.Hrms_m_department_masterScalarFieldEnum = {
  id: 'id',
  department_name: 'department_name',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_designation_masterScalarFieldEnum = {
  id: 'id',
  designation_name: 'designation_name',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_disciplinary_penaltyScalarFieldEnum = {
  id: 'id',
  penalty_type: 'penalty_type',
  description: 'description',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_document_typeScalarFieldEnum = {
  id: 'id',
  doc_type: 'doc_type',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_employee_categoryScalarFieldEnum = {
  id: 'id',
  category_name: 'category_name',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_employment_typeScalarFieldEnum = {
  id: 'id',
  type_name: 'type_name',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_goal_categoryScalarFieldEnum = {
  id: 'id',
  category_name: 'category_name',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_grievance_typeScalarFieldEnum = {
  id: 'id',
  grievance_type_name: 'grievance_type_name',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_holiday_calendarScalarFieldEnum = {
  id: 'id',
  holiday_name: 'holiday_name',
  holiday_date: 'holiday_date',
  location: 'location',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_job_categoryScalarFieldEnum = {
  id: 'id',
  job_category_name: 'job_category_name',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_kpi_masterScalarFieldEnum = {
  id: 'id',
  kpi_name: 'kpi_name',
  description: 'description',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_leave_type_masterScalarFieldEnum = {
  id: 'id',
  leave_type: 'leave_type',
  carry_forward: 'carry_forward',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_letter_typeScalarFieldEnum = {
  id: 'id',
  letter_name: 'letter_name',
  template_path: 'template_path',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_loan_typeScalarFieldEnum = {
  id: 'id',
  loan_name: 'loan_name',
  interest_rate: 'interest_rate',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_pay_componentScalarFieldEnum = {
  id: 'id',
  component_name: 'component_name',
  component_code: 'component_code',
  component_type: 'component_type',
  is_taxable: 'is_taxable',
  is_statutory: 'is_statutory',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_provident_fundScalarFieldEnum = {
  id: 'id',
  pf_name: 'pf_name',
  employer_contribution: 'employer_contribution',
  employee_contribution: 'employee_contribution',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_rating_scaleScalarFieldEnum = {
  id: 'id',
  rating_value: 'rating_value',
  rating_description: 'rating_description',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_review_templateScalarFieldEnum = {
  id: 'id',
  template_name: 'template_name',
  valid_from: 'valid_from',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_salary_structureScalarFieldEnum = {
  id: 'id',
  structure_name: 'structure_name',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_shift_masterScalarFieldEnum = {
  id: 'id',
  shift_name: 'shift_name',
  start_time: 'start_time',
  end_time: 'end_time',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_statutory_rateScalarFieldEnum = {
  id: 'id',
  country_code: 'country_code',
  statutory_type: 'statutory_type',
  lower_limit: 'lower_limit',
  upper_limit: 'upper_limit',
  rate_percent: 'rate_percent',
  effective_from: 'effective_from',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_survey_masterScalarFieldEnum = {
  id: 'id',
  survey_title: 'survey_title',
  description: 'description',
  launch_date: 'launch_date',
  close_date: 'close_date',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_tax_regimeScalarFieldEnum = {
  id: 'id',
  regime_name: 'regime_name',
  country_code: 'country_code',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_tax_reliefScalarFieldEnum = {
  id: 'id',
  relief_name: 'relief_name',
  amount: 'amount',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_work_life_event_typeScalarFieldEnum = {
  id: 'id',
  event_type_name: 'event_type_name',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_work_schedule_templateScalarFieldEnum = {
  id: 'id',
  template_name: 'template_name',
  description: 'description',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_country_masterScalarFieldEnum = {
  id: 'id',
  country_name: 'country_name',
  currency_code: 'currency_code',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_country_tax_rule_templateScalarFieldEnum = {
  id: 'id',
  country_id: 'country_id',
  pay_component_id: 'pay_component_id',
  rule_type: 'rule_type',
  slab_min: 'slab_min',
  slab_max: 'slab_max',
  rate: 'rate',
  flat_amount: 'flat_amount',
  formula_text: 'formula_text',
  is_default: 'is_default',
  is_active: 'is_active',
  effective_from: 'effective_from',
  effective_to: 'effective_to',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Hrms_m_tax_slab_ruleScalarFieldEnum = {
  id: 'id',
  pay_component_id: 'pay_component_id',
  rule_type: 'rule_type',
  slab_min: 'slab_min',
  slab_max: 'slab_max',
  rate: 'rate',
  flat_amount: 'flat_amount',
  formula_text: 'formula_text',
  effective_from: 'effective_from',
  effective_to: 'effective_to',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.M_mobile_notification_templateScalarFieldEnum = {
  id: 'id',
  event_code: 'event_code',
  title_template: 'title_template',
  message_template: 'message_template',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  updatedate: 'updatedate',
  updatedby: 'updatedby',
  log_inst: 'log_inst'
};

exports.Prisma.Crms_m_statesScalarFieldEnum = {
  id: 'id',
  country_code: 'country_code',
  name: 'name',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  log_inst: 'log_inst',
  updatedate: 'updatedate',
  updatedby: 'updatedby'
};

exports.Prisma.CountryScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  is_active: 'is_active',
  createdate: 'createdate',
  createdby: 'createdby',
  log_inst: 'log_inst',
  updatedate: 'updatedate',
  updatedby: 'updatedby'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  hrms_d_role_permissions: 'hrms_d_role_permissions',
  hrms_d_user_role: 'hrms_d_user_role',
  hrms_m_role: 'hrms_m_role',
  hrms_m_user: 'hrms_m_user',
  hrms_m_module: 'hrms_m_module',
  hrms_d_appointment_letter: 'hrms_d_appointment_letter',
  hrms_d_appraisal: 'hrms_d_appraisal',
  hrms_d_asset_assignment: 'hrms_d_asset_assignment',
  hrms_d_competency: 'hrms_d_competency',
  hrms_d_disciplinary_action: 'hrms_d_disciplinary_action',
  hrms_d_document_upload: 'hrms_d_document_upload',
  hrms_d_employee: 'hrms_d_employee',
  hrms_d_employee_address: 'hrms_d_employee_address',
  hrms_d_employee_suggestion: 'hrms_d_employee_suggestion',
  hrms_d_employment_contract: 'hrms_d_employment_contract',
  hrms_d_exit_clearance: 'hrms_d_exit_clearance',
  hrms_d_exit_interview: 'hrms_d_exit_interview',
  hrms_d_grievance: 'hrms_d_grievance',
  hrms_d_helpdesk_ticket: 'hrms_d_helpdesk_ticket',
  hrms_d_hr_letter: 'hrms_d_hr_letter',
  hrms_d_job_posting: 'hrms_d_job_posting',
  hrms_d_leave_application: 'hrms_d_leave_application',
  hrms_d_leave_encashment: 'hrms_d_leave_encashment',
  hrms_d_loan_request: 'hrms_d_loan_request',
  hrms_d_medical_record: 'hrms_d_medical_record',
  hrms_d_notification_log: 'hrms_d_notification_log',
  hrms_d_offer_letter: 'hrms_d_offer_letter',
  hrms_d_org_chart: 'hrms_d_org_chart',
  hrms_d_payslip: 'hrms_d_payslip',
  hrms_d_probation_review: 'hrms_d_probation_review',
  hrms_d_recognition_award: 'hrms_d_recognition_award',
  hrms_d_relieving_letter: 'hrms_d_relieving_letter',
  hrms_d_remote_work_log: 'hrms_d_remote_work_log',
  hrms_d_resume: 'hrms_d_resume',
  hrms_d_succession_plan: 'hrms_d_succession_plan',
  hrms_d_survey_response: 'hrms_d_survey_response',
  hrms_d_time_sheet: 'hrms_d_time_sheet',
  hrms_d_training_feedback: 'hrms_d_training_feedback',
  hrms_d_training_session: 'hrms_d_training_session',
  hrms_d_travel_expense: 'hrms_d_travel_expense',
  hrms_d_work_life_event: 'hrms_d_work_life_event',
  hrms_d_work_permit: 'hrms_d_work_permit',
  hrms_d_wps_file_log: 'hrms_d_wps_file_log',
  hrms_m_advance_type: 'hrms_m_advance_type',
  hrms_m_asset_type: 'hrms_m_asset_type',
  hrms_m_award_type: 'hrms_m_award_type',
  hrms_m_bank_master: 'hrms_m_bank_master',
  hrms_m_branch_master: 'hrms_m_branch_master',
  hrms_m_company_master: 'hrms_m_company_master',
  hrms_m_currency_master: 'hrms_m_currency_master',
  hrms_m_department_master: 'hrms_m_department_master',
  hrms_m_designation_master: 'hrms_m_designation_master',
  hrms_m_disciplinary_penalty: 'hrms_m_disciplinary_penalty',
  hrms_m_document_type: 'hrms_m_document_type',
  hrms_m_employee_category: 'hrms_m_employee_category',
  hrms_m_employment_type: 'hrms_m_employment_type',
  hrms_m_goal_category: 'hrms_m_goal_category',
  hrms_m_grievance_type: 'hrms_m_grievance_type',
  hrms_m_holiday_calendar: 'hrms_m_holiday_calendar',
  hrms_m_job_category: 'hrms_m_job_category',
  hrms_m_kpi_master: 'hrms_m_kpi_master',
  hrms_m_leave_type_master: 'hrms_m_leave_type_master',
  hrms_m_letter_type: 'hrms_m_letter_type',
  hrms_m_loan_type: 'hrms_m_loan_type',
  hrms_m_pay_component: 'hrms_m_pay_component',
  hrms_m_provident_fund: 'hrms_m_provident_fund',
  hrms_m_rating_scale: 'hrms_m_rating_scale',
  hrms_m_review_template: 'hrms_m_review_template',
  hrms_m_salary_structure: 'hrms_m_salary_structure',
  hrms_m_shift_master: 'hrms_m_shift_master',
  hrms_m_statutory_rate: 'hrms_m_statutory_rate',
  hrms_m_survey_master: 'hrms_m_survey_master',
  hrms_m_tax_regime: 'hrms_m_tax_regime',
  hrms_m_tax_relief: 'hrms_m_tax_relief',
  hrms_m_work_life_event_type: 'hrms_m_work_life_event_type',
  hrms_m_work_schedule_template: 'hrms_m_work_schedule_template',
  hrms_m_country_master: 'hrms_m_country_master',
  hrms_m_country_tax_rule_template: 'hrms_m_country_tax_rule_template',
  hrms_m_tax_slab_rule: 'hrms_m_tax_slab_rule',
  m_mobile_notification_template: 'm_mobile_notification_template',
  crms_m_states: 'crms_m_states',
  Country: 'Country'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
